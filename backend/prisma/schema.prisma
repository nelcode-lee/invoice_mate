generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  password          String
  name              String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  emailToken        String?   @unique
  emailTokenExpires DateTime?
  emailVerified     Boolean   @default(false)
}

model Company {
  id            String    @id @default(uuid())
  name          String
  companyNumber String?
  utr           String?
  vatNumber     String?
  clients       Client[]
  expenses      Expense[]
  invoices      Invoice[]
  settings      Setting[]
}

model Client {
  id            String    @id @default(uuid())
  companyId     String
  name          String
  email         String?
  phone         String?
  address       String?
  contactPerson String?
  createdAt     DateTime  @default(now())
  notes         String?
  status        String    @default("active")
  updatedAt     DateTime  @updatedAt
  vatNumber     String?
  company       Company   @relation(fields: [companyId], references: [id])
  invoices      Invoice[]
}

model Invoice {
  id          String     @id @default(uuid())
  companyId   String
  clientId    String
  invoiceDate DateTime
  dueDate     DateTime
  description String?
  subtotal    Float
  vat         Float
  total       Float
  status      String     @default("PENDING")
  client      Client     @relation(fields: [clientId], references: [id])
  company     Company    @relation(fields: [companyId], references: [id])
  lineItems   LineItem[]
}

model LineItem {
  id          String  @id @default(uuid())
  invoiceId   String
  description String
  quantity    Float
  unitPrice   Float
  vatType     String
  vatAmount   Float
  lineTotal   Float
  invoice     Invoice @relation(fields: [invoiceId], references: [id])
}

model Expense {
  id          String   @id @default(uuid())
  companyId   String
  date        DateTime
  amount      Float
  category    String
  description String?
  receiptUrl  String?
  mileage     Float?
  vehicleType String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  company     Company  @relation(fields: [companyId], references: [id])
}

model Setting {
  id        String   @id @default(uuid())
  companyId String
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company   Company  @relation(fields: [companyId], references: [id])

  @@unique([companyId, key])
}
